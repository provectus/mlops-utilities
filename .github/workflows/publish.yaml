name: Publish

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo & prepearing
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - uses: snok/install-poetry@v1
        with:
          version: 1.2.2
      - run: poetry install

      - name: Test with pytest
        run: |
          make test

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: 'report.xml'

  publish:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout repo & prepearing
        uses: actions/checkout@v3

      - uses: snok/install-poetry@v1
        with:
          version: 1.2.2
      - run: poetry install

      - name: Minor version up
        run: |
          make minor_version_up

      - name: Add env
        run: |
          PROJECT_VERSION=$(poetry version --short)
          PYPI_USERNAME=${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD=${{ secrets.PYPI_PASSWORD }}
          echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV

      - name: Build
        run: |
          make build

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1.12.0
        id: create_release
        with:
          generateReleaseNotes: true
          artifacts: "mlops_utilities-${{env.PROJECT_VERSION}}.tar.gz"
          tag: ${{env.PROJECT_VERSION}}
          name: Release ${{env.PROJECT_VERSION}}

      - name: Publish
        run: |
          make publish

      - name: Git push
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: 'main'
          commit-message: '[skip ci] Version updated to ${{env.PROJECT_VERSION}}'
          files: pyproject.toml
